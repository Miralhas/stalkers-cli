from pathlib import Path
from types import SimpleNamespace

import typer
from core.req import Client
from typing_extensions import Annotated
from utils import OUTPUT_FOLDER_NAME

app = typer.Typer(no_args_is_help=True, add_completion=False)

OPTIONS_HELP_TEXT = {
    "root": "Root folder generated by the lightnovel-crawler script",
    "with_image": "Specify whether the order will send an image along with the novel",
    "filename": "Name of the file containing the chapters",
    "novel-slug": "Slug of the novel in which the action will happen",
}

@app.callback()
def main(
    ctx: typer.Context,
    root: Annotated[Path,typer.Option("--root", "-r", help=OPTIONS_HELP_TEXT["root"], prompt="Root Folder", exists=True)] = None,
):
    if not root:
        print("Missing root folder. Pass --root / -r")
        raise typer.Exit(1)

    # create output folder (root/formatted-novel)
    output_folder = Path(f"{root}/{OUTPUT_FOLDER_NAME}")
    output_folder.mkdir(parents=True, exist_ok=True)

    ctx.obj = SimpleNamespace(root=root, output_folder=output_folder)


@app.command("novel", help="Post a novel")
def post_novel(
    ctx: typer.Context,
    with_image: Annotated[bool, typer.Option("--with-image", "-i", help=OPTIONS_HELP_TEXT["with_image"], prompt=True, case_sensitive=False)] = True
):
    client = Client()
    novel_file = Path(f"{ctx.obj.output_folder}/novel.json")
    client.novel_request(novel_file=novel_file, root_path=ctx.obj.root, with_image=with_image)


@app.command("bulkpost", help="Post chapters of a novel in bulk")
def bulk_post_chapters(
    ctx: typer.Context,
    novel_slug: Annotated[str, typer.Option('--novel-slug', '-s', help=OPTIONS_HELP_TEXT["novel-slug"], prompt="Novel Slug")] = None,
    filename: Annotated[str, typer.Option('--filename', '-f', help=OPTIONS_HELP_TEXT["filename"], prompt="Filename")] = None,
):
    client = Client()
    chapters_file = Path(f"{ctx.obj.output_folder}/{filename}")
    client.post_chapter_in_bulk_request(chapters_file=chapters_file, novel_slug=novel_slug)


@app.command("bulkedit", help="Edit chapters of a novel in bulk")
def bulk_edit_chapters(
    ctx: typer.Context,
    novel_slug: Annotated[str, typer.Option('--novel-slug', '-s', help=OPTIONS_HELP_TEXT["novel-slug"], prompt="Novel Slug")] = None,
    filename: Annotated[str, typer.Option('--filename', '-f', help=OPTIONS_HELP_TEXT["filename"], prompt="Filename")] = None,
):
    client = Client()
    chapters_file = Path(f"{ctx.obj.output_folder}/{filename}")
    client.put_chapter_in_bulk_request(chapters_file=chapters_file, novel_slug=novel_slug)


if __name__ == "__main__":
    app()
